---
import { Image } from "astro:assets";
import image1 from "../assets/image 1.png";
import image2 from "../assets/sample.jpg";
import LogoBig from "./LogoBig.astro";
import LogoShort from "./LogoShort.astro";

const slides = [
  image1,
  image2,
  image1,
  image2,
  image1,
];
---
<div class="top_content">
    <span class="logo">
        <LogoShort />
    </span>
    <span class="logo_big">
        <LogoBig/>
    </span>
    
    <div class="left_content">
      <h1>Enjoy with us!</h1>
      <div class="join_link">
        <div class="link_content">
          <a>Join us!</a>
          <svg
            width="36"
            height="9"
            viewBox="0 0 36 9"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <line x1="0" y1="8.5" x2="36" y2="8.5" stroke="black" />
            <line
              x1="35.738"
              y1="8.42583"
              x2="22.738"
              y2="0.425829"
              stroke="black"
            />
          </svg>
        </div>
        <div class="bg_link"></div>
      </div>
    </div>
    <div class="right_content">
      <div class="img_wrapper">
        <div class="slide-wrapper">
          <div class="navigations" id="navigations">
             <span>1</span>
            <div class="w-[50px]  bg-gray-200 rounded-full h-[2px] dark:bg-gray-700">
              <div class="bg-black h-[2px] rounded-full" id="progress"></div>
            </div>
            <span>{slides.length}</span>
            <span id="prev" class="prev">
              <svg width="10" height="12" viewBox="0 0 10 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M9 1L1 6L9 11" stroke="black"/>
              </svg>
            </span>
            <span id="next" class="next">
              <svg width="10" height="12" viewBox="0 0 10 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M1 1L9 6L1 11" stroke="black"/>
              </svg>
            </span>
          </div>
          <div class="slide" id="slide">
            {slides.map((slide, index) => {
              return (
                <div class={`list ${index}`}>
                  <Image src={slide} alt={slide.src}/>
                </div>
              )
            })}
          </div>
        </div>
      </div>
    </div>
  </div>

<script>
import image1 from "../assets/image 1.png";
import image2 from "../assets/sample.jpg";

const slides = [
  image1,
  image2,
  image1,
  image2,
  image1,
];
const slide = document.getElementById('slide') as HTMLElement;
const prev = document.getElementById('prev') as HTMLElement;
const next = document.getElementById('next') as HTMLElement;
const lists = document.querySelectorAll('.list') as NodeListOf<HTMLElement>;
const totalSlides = slides.length;
const progress = document.getElementById('progress') as HTMLElement;
slide.style.width = `${totalSlides*100}%`;
lists.forEach(list => list.style.width = `${100/totalSlides}%`);

let count = 0;
let autoPlayInterval: number | undefined;
let progressInterval: number;
let progressValue = 0;

function updateProgressBar() {
  progressValue +=1;
  progress.style.width=`${progressValue}%`;

  if(progressValue >= 100) {
    progressValue = 0;
    nextClick;
  }
}

function resetProgressBar() {
  clearInterval(progressInterval);
  progressValue = 0;
  progress.style.width = '0%';
  startProgressBar();
}

function startProgressBar() {
  progressInterval = setInterval(updateProgressBar, 30); 
}


function updateListBackground() {
  for (let i = 0; i < lists.length; i++) {
    lists[i].style.backgroundColor = i === count % totalSlides ? '#000' : '#fff';
  }
}

function nextClick() {
  slide.classList.remove(`slide${count % totalSlides + 1}`);
  count == 2 ? count = 0: count++;
  slide.classList.add(`slide${count % totalSlides + 1}`);
  updateListBackground();
}

function prevClick() {
  slide.classList.remove(`slide${count % totalSlides + 1}`);
  count == 0 ? count = 2: count--;
  if (count < 0) count = totalSlides - 1;
  slide.classList.add(`slide${count % totalSlides + 1}`);
  updateListBackground();
}
function startAutoPlay() {
  autoPlayInterval = setInterval(nextClick, 3000);
}
function resetAutoPlayInterval() {
  clearInterval(autoPlayInterval);
  startAutoPlay();
}
next.addEventListener('click', () => {
  nextClick();
  resetAutoPlayInterval();
  resetProgressBar();
});
prev.addEventListener('click', () => {
  prevClick();
  resetAutoPlayInterval();
  resetProgressBar();
});

startAutoPlay();
startProgressBar();
</script>

<style>
  #progress-bar {
    @apply bg-gray-300;
  }
  #progress-bar::-webkit-progress-bar {
    @apply bg-gray-300;
  }
  #progress-bar::-webkit-progress-value {
    @apply bg-emerald-600;
  }
  #progress-bar::-moz-progress-bar {
    @apply bg-emerald-600;
  }
</style>